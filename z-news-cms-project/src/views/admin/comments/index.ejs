<div id="admin-content">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <h1 class="admin-heading">
          <i class="fa fa-comments"></i> Comments Management
        </h1>
      </div>

      <div class="col-md-12">
        <div id="commentsTable"></div>
      </div>
    </div>
  </div>
</div>

<div class="modal" tabindex="-1" id="commentModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="commentModalTitle">Comment</h5>

        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>

      <div class="modal-body" id="commentModalBody"></div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://unpkg.com/tabulator-tables@6.0.0/dist/js/tabulator.min.js"></script>

<script>
  const tableData = (<%- JSON.stringify(comments) %>);

  const table = new Tabulator("#commentsTable", {
      data: tableData,
      layout:"fitColumns",
      pagination:true,
      paginationSize:10,
      paginationSizeSelector:[5,10,25,50,100],
      columns: [
          { title: "S.No.", formatter:"rownum", width:100, hozAlign:"center" },
          { title: "Article", field: "article.title", headerFilter:"input" },
          { title: "Content", field: "content", headerFilter:"input" },
          { title: "User", field: "name", headerFilter:"input" },
          { title: "Date", field: "createdAt", headerFilter:"input",
          formatter:function(cell, formatterParams, onRendered){
            const date = new Date(cell.getValue());
            return date
                    .toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' })
                    .replace(/\s/g, '-');
          } },
          { title: "Status", field: "status", headerFilter:"input" },
          { title: "Actions", formatter: function(cell, formatterParams, onRendered) {
              return `
              <button
                class="btn btn-sm btn-success"
                onclick="viewComment('${cell.getData()._id}')"
              >
                View
              </button>

              <button
                class="btn btn-sm btn-danger"
                onclick="deleteComment('${cell.getData()._id}')"
              >
                Delete
              </button>`;
          }}
      ],
  });

  // View Comment
  function viewComment(id){
    const comment = tableData.find(item => item._id === id);

    const html = `
      <p><b>Message : </b> ${comment.content}</p>
      <select class="form-select" onchange="updateCommentStatus('${comment._id}', this.value)">
        <option value="pending" ${comment.status === 'pending' ? 'selected' : ''}>Pending</option>
        <option value="approved" ${comment.status === 'approved' ? 'selected' : ''}>Approved</option>
        <option value="rejected" ${comment.status === 'rejected' ? 'selected' : ''}>Rejected</option>
      </select>
    `;

    const modal = new bootstrap.Modal(document.getElementById('commentModal'));
    const title = document.getElementById('commentModalTitle');
    const modalBody = document.getElementById('commentModalBody');

    title.innerHTML = `Comment by - ${comment.name}`;
    modalBody.innerHTML = html;
    modal.show();

    // window.location.href = `/admin/comment/${id}/edit`;
  }


  // Update Comment Status
  async function updateCommentStatus(id, status){
    try {
      const response = await fetch(
        `/admin/update-comment-status/${id}`,
        {
          method: 'put',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ status })
        }
      );

      const data = await response.json();

      if(data.success){
        window.location.reload();
      }
    } catch (error) {
      console.log(error);
    }
  }

  // Delete User
  async function deleteComment(id){
    try {
      if (confirm("Are you sure you want to delete this comment?")) {

        const response = await fetch(
        `/admin/delete-comment/${id}`,
        { method: 'delete' }
        );

        if(response.ok){
          window.location.reload();
        }

        if(response.status === 400){
          const data = await response.json();
          alert(data.message);
        }
      }
    } catch (error) {
      console.log(error);
    }
  }
</script>

<%- contentFor('tabulatorCSS') %>
<link
  href="https://unpkg.com/tabulator-tables@6.0.0/dist/css/tabulator.min.css"
  rel="stylesheet"
/>
